@using Blazorise.Icons.Material
@using ReactiveUI

@inherits TodoViewBase;


@if (!ViewModel.IsEdit)
{
    <Row Margin="Indent" 
         Style="min-height: 0.25rem;" 
         Class="@DropBeforeClass"
         
         @ondrop="@(OnDropBefore)"
         @ondragenter="@(OnDragBeforeEnter)"
         @ondragleave="@(OnDragBeforeLeave)"
         ondragover="event.preventDefault();"
    />
    
    <Row Margin="Indent"
         Class="@DropClass"

         @ondrop="@(OnDrop)"
         @ondragstart="@(OnDragStart)"
         @ondragenter="@(OnDragEnter)"
         @ondragleave="@(OnDragLeave)"
         ondragover="event.preventDefault();"
         draggable="true">
        <Column ColumnSize="ColumnSize.Is10" Class="d-flex align-items-center">
            <Button Color="Color.Link" Class="btn-icon" Command="ViewModel.Expand" Disabled="@(!ViewModel.CanExpand)">
                <Blazorise.Icons.Material.Icon Name="@(ViewModel.IsExpanded ? MaterialIcons.KeyboardArrowDown : MaterialIcons.KeyboardArrowRight)" />
            </Button>
            <Check TValue="bool" @bind-Checked="ViewModel.Completed">@ViewModel.Summary</Check>
        </Column>
        <Column ColumnSize="ColumnSize.IsAuto.WithOffset">
            <Button Color="Color.Link" Class="btn-icon" Command="ViewModel.Edit">
                <Blazorise.Icons.Material.Icon Name="MaterialIcons.Create" />
            </Button>
            <Button Color="Color.Link" Class="btn-icon" Command="ViewModel.Remove">
                <Blazorise.Icon Name="MaterialIcons.Remove" />
            </Button>
        </Column>
    </Row>
    <Row Margin="Indent" 
         Style="min-height: 0.25rem;" 
         Class="@DropNextClass"
         
         @ondrop="@(OnDropNext)"
         @ondragenter="@(OnDragNextEnter)"
         @ondragleave="@(OnDragNextLeave)"
         ondragover="event.preventDefault();"
    />
    
}
else
{
    <Row Margin="Indent">
        <Column ColumnSize="ColumnSize.Is10">
            <Card>
                <CardBody>
                    <Field>
                        <TextEdit Placeholder="Write what you want..." @bind-Text="ViewModel.Summary" />
                    </Field>
                    <Button Color="Color.Primary" Command="ViewModel.Save" Disabled="@(!ViewModel.CanSave)">Save</Button>
                    <Button Color="Color.Light" Command="ViewModel.Cancel">Cancel</Button>
                </CardBody>
            </Card>
        </Column>
    </Row>
}


@if (ViewModel.IsExpanded)
{
    foreach (var result in ViewModel.Children)
    {
        <TodoView ViewModel="@result" />
    }
}
